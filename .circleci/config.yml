---
version: 2.1

orbs:
  # https://circleci.com/developer/orbs/orb/circleci/go
  go: circleci/go@1.5.0

executors:
  docker_executor:
    docker:
      - image: chatwork/circleci-docker:20.10.14
    working_directory: /root/project

workflows:
  version: 2
  integration:
    jobs:
      - go_build
      - docker_build
      - docker_build_and_push:
          context: "DockerHub"
          filters:
            tags:
              only: /^.*/
            branches:
              ignore:
                - /^.*/

jobs:
  go_build:
    executor:
      name: go/default
      tag: '1.15'
    steps:
      - checkout
      - go/mod-download-cached
      - run:
          name: Enforce Go Formatted Code
          command: "! go fmt ./... 2>&1 | read"
      - run:
          name: Install GolangCI-Lint
          command: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.46.2
      - run:
          name: Run GolangCI-Lint
          command: ./bin/golangci-lint run --tests
      - run: make

  docker_build:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    environment:
      - CIRCLECI_WORKSPACE: /root/project
      - BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - checkout
      - run: docker version
      - run:
          name: Install buildx
          command: |
            docker buildx install
            docker run --privileged --rm tonistiigi/binfmt --install "$BUILDX_PLATFORMS"
            docker buildx create --name multi-arch --use
            docker buildx ls
      - run: docker login -u="${DOCKER_REGISTRY_USERNAME}" -p="${DOCKER_REGISTRY_PASSWORD}"
      - run: make build-image-multi

  docker_build_and_push:
    machine:
      image: ubuntu-2004:202104-01
      docker_layer_caching: true
    environment:
      - CIRCLECI_WORKSPACE: /root/project
      - BUILDX_PLATFORMS: linux/amd64,linux/arm64
    steps:
      - checkout
      - run: docker version
      - run:
          name: Install buildx
          command: |
            docker buildx install
            docker run --privileged --rm tonistiigi/binfmt --install "$BUILDX_PLATFORMS"
            docker buildx create --name multi-arch --use
            docker buildx ls
      - run: docker login -u="${DOCKER_REGISTRY_USERNAME}" -p="${DOCKER_REGISTRY_PASSWORD}"
      - run: make build-image-multi
      - run: make push-image-multi
